{"ast":null,"code":"var _jsxFileName = \"/Users/hitansh/HTM/-Polygon-Wallet/src/components/student_grid.jsx\";\nimport React from \"react\";\nimport { StudentService } from \"../storage_service/student_service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StudentGrid extends React.Component {\n  constructor() {\n    super();\n    this.service = new StudentService();\n    this.state = {\n      isEditing: false,\n      editStudentId: 0,\n      students: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadStudentsFromDb();\n  }\n\n  async loadStudentsFromDb() {\n    try {\n      const students = await this.service.getStudents();\n      this.setState({\n        students: students\n      });\n    } catch (ex) {\n      alert(ex.message);\n      console.error(ex);\n    }\n  }\n\n  async add() {\n    var student = {\n      name: this.refs.name.value,\n      gender: this.refs.gender.value,\n      country: this.refs.country.value,\n      city: this.refs.city.value\n    }; // add student into indexeddb\n\n    try {\n      const students = await this.service.addStudent(student);\n      this.state.students.push(students[0]);\n      this.setState({\n        students: this.state.students\n      });\n      this.clear();\n    } catch (ex) {\n      alert(ex.message);\n      console.error(ex);\n    }\n  }\n\n  clear() {\n    this.refs.name.value = \"\";\n    this.refs.gender.value = \"\";\n    this.refs.country.value = \"\";\n    this.refs.city.value = \"\";\n  }\n\n  async editUpdate(el) {\n    const row = el.target.parentElement.parentElement;\n    const studentId = Number(row.dataset.id);\n\n    if (this.state.isEditing) {\n      const updateValue = {\n        name: row.children[0].firstChild.value,\n        gender: row.children[1].firstChild.value,\n        country: row.children[2].firstChild.value,\n        city: row.children[3].firstChild.value\n      }; // update student into indexeddb\n\n      try {\n        const rowsUpdated = await this.service.updateStudentById(studentId, updateValue);\n\n        if (rowsUpdated > 0) {\n          const index = this.state.students.findIndex(value => value.id === studentId);\n          this.state.students[index] = {\n            id: studentId,\n            ...updateValue\n          };\n          this.setState({\n            student: this.state.students,\n            isEditing: false,\n            editStudentId: 0\n          });\n        }\n      } catch (ex) {\n        alert(ex.message);\n        console.error(ex);\n      }\n    } else {\n      this.setState({\n        isEditing: true,\n        editStudentId: studentId\n      });\n    }\n  }\n\n  async delete(el) {\n    const row = el.target.parentElement.parentElement;\n    const studentId = Number(row.dataset.id); // delete student from indexeddb\n\n    try {\n      const rowsDeleted = await this.service.removeStudent(studentId);\n\n      if (rowsDeleted > 0) {\n        const index = this.state.students.findIndex(value => value.id === studentId);\n        this.state.students.splice(index, 1);\n        this.setState({\n          student: this.state.students\n        });\n        alert(\"Row Deleted\");\n      }\n    } catch (ex) {\n      alert(ex.message);\n      console.error(ex);\n    }\n  }\n\n  render() {\n    const getCell = value => {\n      return this.state.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this) : {\n        value\n      };\n    };\n\n    const dataRows = this.state.students.map(student => {\n      if (student.id === this.state.editStudentId) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          \"data-id\": student.id,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: getCell(student.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getCell(student.gender)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getCell(student.country)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getCell(student.city)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: this.state.isEditing ? 'update' : 'edit',\n              onClick: this.editUpdate.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"delete\",\n              onClick: this.delete.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          \"data-id\": student.id,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"edit\",\n              onClick: this.editUpdate.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"button\",\n              value: \"delete\",\n              onClick: this.delete.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this);\n      }\n    });\n\n    const addRow = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: \"gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: \"country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: \"city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"add\",\n          onClick: this.add.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"cancel\",\n          onClick: this.clear.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)]\n    }, '0', true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 24\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [addRow, dataRows]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/hitansh/HTM/-Polygon-Wallet/src/components/student_grid.jsx"],"names":["React","StudentService","StudentGrid","Component","constructor","service","state","isEditing","editStudentId","students","componentDidMount","loadStudentsFromDb","getStudents","setState","ex","alert","message","console","error","add","student","name","refs","value","gender","country","city","addStudent","push","clear","editUpdate","el","row","target","parentElement","studentId","Number","dataset","id","updateValue","children","firstChild","rowsUpdated","updateStudentById","index","findIndex","delete","rowsDeleted","removeStudent","splice","render","getCell","dataRows","map","bind","addRow"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StudentService } from \"../storage_service/student_service\";\n\nexport default class StudentGrid extends React.Component {\n\n\n    constructor() {\n        super();\n        this.service = new StudentService();\n        this.state = {\n            isEditing: false,\n            editStudentId: 0,\n            students: []\n        }\n    }\n\n    componentDidMount() {\n        this.loadStudentsFromDb();\n    }\n\n    async loadStudentsFromDb() {\n        try {\n            const students = await this.service.getStudents()\n            this.setState({ students: students })\n        }\n        catch (ex) {\n            alert(ex.message);\n            console.error(ex);\n        }\n    }\n\n    async add() {\n        var student = {\n            name: this.refs.name.value,\n            gender: this.refs.gender.value,\n            country: this.refs.country.value,\n            city: this.refs.city.value\n        }\n        // add student into indexeddb\n\n        try {\n            const students = await this.service.addStudent(student)\n            this.state.students.push(students[0]);\n            this.setState({ students: this.state.students });\n            this.clear();\n        }\n        catch (ex) {\n            alert(ex.message);\n            console.error(ex);\n        }\n\n    }\n\n\n    clear() {\n        this.refs.name.value = \"\";\n        this.refs.gender.value = \"\";\n        this.refs.country.value = \"\";\n        this.refs.city.value = \"\";\n    }\n\n    async  editUpdate(el) {\n        const row = el.target.parentElement.parentElement;\n        const studentId = Number(row.dataset.id);\n        if (this.state.isEditing) {\n            const updateValue = {\n                name: row.children[0].firstChild.value,\n                gender: row.children[1].firstChild.value,\n                country: row.children[2].firstChild.value,\n                city: row.children[3].firstChild.value\n            }\n            // update student into indexeddb\n\n            try {\n                const rowsUpdated = await this.service.updateStudentById(studentId, updateValue);\n                if (rowsUpdated > 0) {\n                    const index = this.state.students.findIndex(value => value.id === studentId);\n                    this.state.students[index] = { id: studentId, ...updateValue };\n                    this.setState({ student: this.state.students, isEditing: false, editStudentId: 0 });\n                }\n\n            }\n            catch (ex) {\n                alert(ex.message);\n                console.error(ex);\n            }\n        }\n        else {\n            this.setState({ isEditing: true, editStudentId: studentId });\n        }\n    }\n\n    async delete(el) {\n        const row = el.target.parentElement.parentElement;\n        const studentId = Number(row.dataset.id);\n        // delete student from indexeddb\n\n        try {\n            const rowsDeleted = await this.service.removeStudent(studentId);\n            if (rowsDeleted > 0) {\n                const index = this.state.students.findIndex(value => value.id === studentId);\n                this.state.students.splice(index, 1);\n                this.setState({ student: this.state.students });\n                alert(\"Row Deleted\");\n            }\n\n        }\n        catch (ex) {\n            alert(ex.message);\n            console.error(ex);\n        }\n    }\n\n\n    render() {\n        const getCell = (value) => {\n            return this.state.isEditing ?\n                <input type=\"text\" defaultValue={value} /> :\n                { value }\n        }\n\n        const dataRows = this.state.students.map(student => {\n            if (student.id === this.state.editStudentId) {\n                return (\n                    <tr key={student.id} data-id={student.id}>\n                        <td>\n                            {getCell(student.name)}\n                        </td>\n                        <td>{getCell(student.gender)}</td>\n                        <td>{getCell(student.country)}</td>\n                        <td>{getCell(student.city)}</td>\n                        <td>\n                            <input type='button' value={this.state.isEditing ? 'update' : 'edit'}\n                                onClick={this.editUpdate.bind(this)} />\n                        </td>\n                        <td>\n                            <input type='button' value='delete'\n                                onClick={this.delete.bind(this)} />\n                        </td>\n                    </tr>\n                )\n            }\n            else {\n                return (\n                    <tr key={student.id} data-id={student.id}>\n                        <td>{student.name}</td>\n                        <td>{student.gender}</td>\n                        <td>{student.country}</td>\n                        <td>{student.city}</td>\n                        <td><input type='button' value='edit' onClick={this.editUpdate.bind(this)} /></td>\n                        <td>\n                            <input type='button' value='delete'\n                                onClick={this.delete.bind(this)} />\n                        </td>\n                    </tr>\n                )\n            }\n        });\n        const addRow = <tr key='0'>\n            <td><input type=\"text\" ref=\"name\" /></td>\n            <td><input type=\"text\" ref=\"gender\" /></td>\n            <td><input type=\"text\" ref=\"country\" /></td>\n            <td><input type=\"text\" ref=\"city\" /></td>\n            <td>\n                <input type='button' value='add' onClick={this.add.bind(this)} />\n            </td>\n            <td>\n                <input type='button' value='cancel' onClick={this.clear.bind(this)} />\n            </td>\n        </tr>\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Gender</th>\n                            <th>Country</th>\n                            <th>City</th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {addRow}\n                        {dataRows}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}