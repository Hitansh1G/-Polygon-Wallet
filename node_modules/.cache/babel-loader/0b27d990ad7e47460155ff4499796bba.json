{"ast":null,"code":"import { BaseService } from \"./base_service\";\nexport class StudentService extends BaseService {\n  constructor() {\n    super();\n    this.tableName = \"Students\";\n  }\n\n  getStudents() {\n    return this.connection.select({\n      from: this.tableName\n    });\n  }\n\n  addStudent(student) {\n    return this.connection.insert({\n      into: this.tableName,\n      values: [student],\n      return: true // since studentid is autoincrement field and we need id, \n      // so we are making return true which will return the whole data inserted.\n\n    });\n  }\n\n  getStudentById(id) {\n    return this.connection.select({\n      from: this.tableName,\n      where: {\n        id: id\n      }\n    });\n  }\n\n  removeStudent(id) {\n    return this.connection.remove({\n      from: this.tableName,\n      where: {\n        id: id\n      }\n    });\n  }\n\n  updateStudentById(id, updateData) {\n    return this.connection.update({\n      in: this.tableName,\n      set: updateData,\n      where: {\n        id: id\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/hitansh/HTM/-Polygon-Wallet/src/storage_service/student_service.js"],"names":["BaseService","StudentService","constructor","tableName","getStudents","connection","select","from","addStudent","student","insert","into","values","return","getStudentById","id","where","removeStudent","remove","updateStudentById","updateData","update","in","set"],"mappings":"AAAA,SACIA,WADJ,QAEO,gBAFP;AAIA,OAAO,MAAMC,cAAN,SAA6BD,WAA7B,CAAyC;AAE5CE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,SAAL,GAAiB,UAAjB;AACH;;AAEDC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKC,UAAL,CAAgBC,MAAhB,CAAuB;AAC1BC,MAAAA,IAAI,EAAE,KAAKJ;AADe,KAAvB,CAAP;AAGH;;AAEDK,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChB,WAAO,KAAKJ,UAAL,CAAgBK,MAAhB,CAAuB;AAC1BC,MAAAA,IAAI,EAAE,KAAKR,SADe;AAE1BS,MAAAA,MAAM,EAAE,CAACH,OAAD,CAFkB;AAG1BI,MAAAA,MAAM,EAAE,IAHkB,CAGb;AACb;;AAJ0B,KAAvB,CAAP;AAMH;;AAEDC,EAAAA,cAAc,CAACC,EAAD,EAAK;AACf,WAAO,KAAKV,UAAL,CAAgBC,MAAhB,CAAuB;AAC1BC,MAAAA,IAAI,EAAE,KAAKJ,SADe;AAE1Ba,MAAAA,KAAK,EAAE;AACHD,QAAAA,EAAE,EAAEA;AADD;AAFmB,KAAvB,CAAP;AAMH;;AAEDE,EAAAA,aAAa,CAACF,EAAD,EAAK;AACd,WAAO,KAAKV,UAAL,CAAgBa,MAAhB,CAAuB;AAC1BX,MAAAA,IAAI,EAAE,KAAKJ,SADe;AAE1Ba,MAAAA,KAAK,EAAE;AACHD,QAAAA,EAAE,EAAEA;AADD;AAFmB,KAAvB,CAAP;AAMH;;AAEDI,EAAAA,iBAAiB,CAACJ,EAAD,EAAKK,UAAL,EAAiB;AAC9B,WAAO,KAAKf,UAAL,CAAgBgB,MAAhB,CAAuB;AAAEC,MAAAA,EAAE,EAAE,KAAKnB,SAAX;AAC1BoB,MAAAA,GAAG,EAAEH,UADqB;AAE1BJ,MAAAA,KAAK,EAAE;AACHD,QAAAA,EAAE,EAAEA;AADD;AAFmB,KAAvB,CAAP;AAMH;;AA/C2C","sourcesContent":["import {\n    BaseService\n} from \"./base_service\";\n\nexport class StudentService extends BaseService {\n\n    constructor() {\n        super();\n        this.tableName = \"Students\";\n    }\n\n    getStudents() {\n        return this.connection.select({\n            from: this.tableName,\n        })\n    }\n\n    addStudent(student) {\n        return this.connection.insert({\n            into: this.tableName,\n            values: [student],\n            return: true // since studentid is autoincrement field and we need id, \n            // so we are making return true which will return the whole data inserted.\n        })\n    }\n\n    getStudentById(id) {\n        return this.connection.select({\n            from: this.tableName,\n            where: {\n                id: id\n            }\n        })\n    }\n\n    removeStudent(id) {\n        return this.connection.remove({\n            from: this.tableName,\n            where: {\n                id: id\n            }\n        })\n    }\n\n    updateStudentById(id, updateData) {\n        return this.connection.update({ in: this.tableName,\n            set: updateData,\n            where: {\n                id: id\n            }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}